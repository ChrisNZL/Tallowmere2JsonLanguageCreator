
// http://stackoverflow.com/a/17606289/206410
String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
};


$(document).ready(function() {

	// Get languages
	var languageIndices = [];
	$('tbody tr').each(function(index, tr){
		// Language row
		if (index == 0) {
			$('td', tr).each(function (index2, td){
				var language = $(td).text();
				if (language.length > 0) {
					if (language.substring(0, 2) != '//') {
						languageIndices[language] = index2;
						console.log('Added language ' + language + ' as index ' + index2);
					}
				}
			});
		}
	});

	// Add HTML to top of page
	$('body').prepend(
		'<div id="Converter" style="padding:20px">' +
			'Select a language to convert: ' +
			'<select>' +
				GetOptions() +
			'</select> ' +
			'<button>Convert</button>' +
		"</div>"
	);

	// Populate the select list
	function GetOptions () {
		var options = '';
		//for (var i = 0; i < languageIndices.length; i++) {
		for (var key in languageIndices) {
			options += '<option value="' + key + '">' + key + '</option>';
		}
		return options;
	}

	// Do conversion. Create both JSON and LanguageData.cs C# code.
	$('button').click(function(){
		var tab = '	';
		var columnNumber = languageIndices[$('select').val()];

		var autoGenComment = '// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.\n\n';

		var json = '{\n';
		json += tab + autoGenComment;
		json += tab + '// ' + $('select').val() + '\n\n';

		var ini = '';

		var languageDataCSharp = autoGenComment;
		languageDataCSharp += 'using UnityEngine;\n';
		//languageDataCSharp += 'using System.Collections.Generic;\n';
		languageDataCSharp += '\n';
		languageDataCSharp += 'namespace TallowmereII {\n\n';
		languageDataCSharp += tab + '[System.Serializable]\n';
		languageDataCSharp += tab + 'public class StringID {\n\n';

		var dungeonNounGroups = [];
		var currentDungeonNounGroupName = '';

		$('tr').each(function(index, tr){
			var firstColumnString = $('td', tr).eq(0).text().trim();
			
			if (firstColumnString.length > 0) {

				// Is this a comment?
				if (firstColumnString.substring(0, 2) == "//") {
					json += tab + firstColumnString + '\n';

					var headerString = firstColumnString.substring(3).trim();
					if (headerString != "String IDs") {
						//languageDataCSharp += tab + tab + '[Header("' + headerString + '")]\n';
						languageDataCSharp += tab + tab + '// ' + headerString + '\n';
						ini += '[' + headerString + ']\n';
					}

					// Is this a Dungeon Noun comment?
					var dungeonNounPrefix = 'Dungeon Nouns: ';
					if (headerString.length > dungeonNounPrefix.length && headerString.substring(0, dungeonNounPrefix.length) == dungeonNounPrefix.length) {
						currentDungeonNounGroupName = headerString.substring(dungeonNounPrefix.length);
						dungeonNounGroups[currentDungeonNounGroupName] = [];
					}
					else {
						currentDungeonNounGroupName = '';
					}
				}
				// This is a key
				else {
					var keyString = firstColumnString;
					var valueString = $('td', tr).eq(columnNumber).text().trim();

					// Convert newlines in the Tips section to %NEWLINE% as a special case
					if (keyString.length > 4 && keyString.substring(0, 4) == "Tip_") {
						valueString = valueString.replaceAll("\r\n", "%NEWLINE%");
						valueString = valueString.replaceAll("\n", "%NEWLINE%");
					}

					json += tab + '"' + keyString + '": "' + valueString + '",\n';

					ini += keyString + ' = ' + valueString + '\n';



					//cSharp += tab + tab + 'public string ' + keyString + ';\n'; // <- Old
					languageDataCSharp += tab + tab + 'public const string ' + keyString + ' = "' + keyString + '";\n';

					// Add to Dungeon Noun Group if needed
					if (currentDungeonNounGroupName.length > 0) {
						var currentDungeonNounGroup = dungeonNounGroups[currentDungeonNounGroupName];
					}
				}
			}
			else {
				json += '\n';
				ini += '\n';
				languageDataCSharp += '\n';
			}
		});

		// Remove trailing comma and newline
		json = json.substring(0, json.length-2) + '\n';
		json += '}\n';

		ini += '\n';

		languageDataCSharp += tab + '}\n\n';
		languageDataCSharp += '}\n';

		$('#Converter').append(
			//'<br /><br /><b>Here is your JSON:</b> <br />' +
			//'<textarea style="width:80%; height:40%"">' + json + '</textarea>' +
			'<br /><br /><b>Here is your ' + $('select').val() + '.ini content:</b> <br />' +
			'<textarea style="width:80%; height:40%"">' + ini + '</textarea>' +
			'<br /><br />' +
			'<b>Here is your StringID.cs content:</b> <br />' +
			'<textarea style="width:80%; height:40%"">' + languageDataCSharp + '</textarea>'
		);
	});

});